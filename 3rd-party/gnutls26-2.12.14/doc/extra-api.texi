



@subheading gnutls_extra_check_version
@anchor{gnutls_extra_check_version}
@deftypefun {const char *} {gnutls_extra_check_version} (const char * @var{req_version})
@var{req_version}: version string to compare with, or @code{NULL}.

Check GnuTLS Extra Library version.

See @code{GNUTLS_EXTRA_VERSION} for a suitable @code{req_version} string.

@strong{Return value:} Check that the version of the library is at
minimum the one given as a string in @code{req_version} and return the
actual version string of the library; return @code{NULL} if the
condition is not met.  If @code{NULL} is passed to this function no
check is done and only the version string is returned.
@end deftypefun
@subheading gnutls_global_init_extra
@anchor{gnutls_global_init_extra}
@deftypefun {int} {gnutls_global_init_extra} ( @var{void})

This function initializes the global state of gnutls-extra library
to defaults.

Note that @code{gnutls_global_init()} has to be called before this
function.  If this function is not called then the gnutls-extra
library will not be usable.

This function is not thread safe, see the discussion for
@code{gnutls_global_init()} on how to deal with that.

@strong{Returns:} On success, @code{GNUTLS_E_SUCCESS} (zero) is returned,
otherwise an error code is returned.
@end deftypefun