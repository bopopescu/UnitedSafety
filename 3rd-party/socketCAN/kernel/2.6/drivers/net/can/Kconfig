menu "CAN Device Drivers"
	depends on CAN

config CAN_VCAN
	tristate "Virtual Local CAN Interface (vcan)"
	depends on CAN
	default N
	---help---
	  Similar to the network loopback devices, vcan offers a
	  virtual local CAN interface.

	  This driver can also be built as a module.  If so, the module
	  will be called vcan.

config CAN_SLCAN
	tristate "Serial / USB serial CAN Adaptors (slcan)"
	depends on CAN
	default N
	---help---
	  CAN driver for several 'low cost' CAN interfaces that are attached
	  via serial lines or via USB-to-serial adapters using the LAWICEL
	  ASCII protocol. The driver implements the tty linediscipline N_SLCAN.

	  As only the sending and receiving of CAN frames is implemented, this
	  driver should work with the (serial/USB) CAN hardware from:
	  www.canusb.com / www.can232.com / www.mictronics.de / www.canhack.de

	  Userspace tools to attach the SLCAN line discipline (slcan_attach,
	  slcand) can be found in the can-utils at the SocketCAN SVN, see
	  http://developer.berlios.de/projects/socketcan for details.

	  The slcan driver supports up to 10 CAN netdevices by default which
	  can be changed by the 'maxdev=xx' module option. This driver can
	  also be built as a module. If so, the module will be called slcan.

config CAN_OLD_DRIVERS
	tristate "Prompt for old CAN drivers (e.g. no sysfs support)"
	depends on CAN
	default N
	---help---
	  The old drivers do not support sysfs nor proper platform device
	  support. Some of the old drivers might only be configured by
	  module commandline options.

if CAN_OLD_DRIVERS
source "drivers/net/can/old/Kconfig"
endif

config CAN_DEV
	tristate "Platform CAN drivers with Netlink support"
	depends on CAN
	default y
	---help---
	  Enables the common framework for platform CAN drivers with Netlink
	  support. This is the standard library for CAN drivers.
	  If unsure, say Y.

config CAN_DEV_SYSFS
	bool "Support for sysfs interface (deprecated)"
	depends on CAN_DEV && SYSFS
	default N
	---help---
	  Adds support for the legacy sysfs interface to configure CAN
	  devices. If possible, please use the new netlink interface
	  instead.
	  If unsure, say N.

config CAN_CALC_BITTIMING
	bool "CAN bit-timing calculation"
	depends on CAN_DEV
	default y
	---help---
	  If enabled, CAN bit-timing parameters will be calculated for the
	  bit-rate specified via Netlink argument "bitrate" when the device
	  get started. This works fine for the most common CAN controllers
	  with standard bit-rates but may fail for exotic bit-rates or CAN
	  source clock frequencies. Disabling saves some space, but then the
	  bit-timing parameters must be specified directly using the Netlink
	  arguments "tq", "prop_seg", "phase_seg1", "phase_seg2" and "sjw".
	  If unsure, say Y.

config CAN_ESD_PCI331
	tristate "ESD CAN 331 Cards"
	depends on PCI && CAN_DEV
	---help---
	  This driver supports the PCI/331, CPCI/331 and PMC/331 CAN cards
	  from the esd system design gmbh (http://www.esd.eu).

config CAN_SOFTING
	tristate "Softing Gmbh CAN generic support"
	depends on CAN_DEV
	---help---
	  generic softing CAN cards
	  Sofing CAN cards come with 1 or 2 physical busses.
	  The API of the card does not allow fine control per bus, but
	  controls the 2 busses on the card together.
	  As such, some actions (start/stop/busoff recovery) on 1 bus
	  must bring down the other bus too temporarily.
	  You have been warned.
	  This driver is written on safe on 64bit, but not on big endian.

config CAN_SOFTING_CS
	tristate "Softing CAN pcmcia cards"
	depends on CAN_SOFTING && PCMCIA
	---help---
	  Support for PCMCIA cards from Softing Gmbh & some cards
	  from Vector Gmbh.
	  You need firmware for these, which you can get at
	  http://developer.berlios.de/projects/socketcan/
	  This version of the driver is written against
	  firmware version 4.6

config CAN_AT91
	tristate "Atmel AT91 onchip CAN controller"
	depends on CAN_DEV && ARCH_AT91SAM9263
	default N
	---help---
	  This is a driver for the SoC CAN controller in Atmel's AT91SAM9263.

config CAN_MCP251X
	tristate "Microchip MCP251x SPI CAN controllers"
	depends on CAN_DEV && SPI
	---help---
	  Driver for the Microchip MCP251x SPI CAN controllers.

source "drivers/net/can/cc770/Kconfig"

source "drivers/net/can/mscan/Kconfig"

source "drivers/net/can/sja1000/Kconfig"

source "drivers/net/can/usb/Kconfig"

config CAN_DEBUG_DEVICES
	bool "CAN devices debugging messages"
	depends on CAN
	default N
	---help---
	  Say Y here if you want the CAN device drivers to produce a bunch of
	  debug messages to the system log.  Select this if you are having
	  a problem with CAN support and want to see more of what is going
	  on.

endmenu
