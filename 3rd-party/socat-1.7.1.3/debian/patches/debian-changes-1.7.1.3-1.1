Description: Upstream changes introduced in version 1.7.1.3-1.1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 socat (1.7.1.3-1.1) unstable; urgency=low
 .
   * Non-maintainer upload.
   * Fix build against new openssl (without SSLv2 support), closes: #622018.
 .
 The person named in the Author field signed this changelog entry.
Author: Julien Cristau <jcristau@debian.org>
Bug-Debian: http://bugs.debian.org/622018

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- socat-1.7.1.3.orig/sslcls.c
+++ socat-1.7.1.3/sslcls.c
@@ -35,6 +35,7 @@ int sycSSL_library_init(void) {
    return result;
 }
 
+#ifndef OPENSSL_NO_SSL2
 SSL_METHOD *sycSSLv2_client_method(void) {
    SSL_METHOD *result;
    Debug("SSLv2_client_method()");
@@ -50,6 +51,7 @@ SSL_METHOD *sycSSLv2_server_method(void)
    Debug1("SSLv2_server_method() -> %p", result);
    return result;
 }
+#endif
 
 SSL_METHOD *sycSSLv3_client_method(void) {
    SSL_METHOD *result;
--- socat-1.7.1.3.orig/xio-openssl.c
+++ socat-1.7.1.3/xio-openssl.c
@@ -667,9 +667,12 @@ int
 
    if (!server) {
       if (me_str != 0) {
+#ifndef OPENSSL_NO_SSL2
 	 if (!strcasecmp(me_str, "SSLv2") || !strcasecmp(me_str, "SSL2")) {
 	    method = sycSSLv2_client_method();
-	 } else if (!strcasecmp(me_str, "SSLv3") || !strcasecmp(me_str, "SSL3")) {
+	 } else
+#endif
+	 if (!strcasecmp(me_str, "SSLv3") || !strcasecmp(me_str, "SSL3")) {
 	    method = sycSSLv3_client_method();
 	 } else if (!strcasecmp(me_str, "SSLv23") || !strcasecmp(me_str, "SSL23") ||
 		    !strcasecmp(me_str, "SSL")) {
@@ -686,9 +689,12 @@ int
       }
    } else /* server */ {
       if (me_str != 0) {
+#ifndef OPENSSL_NO_SSL2
 	 if (!strcasecmp(me_str, "SSLv2") || !strcasecmp(me_str, "SSL2")) {
 	    method = sycSSLv2_server_method();
-	 } else if (!strcasecmp(me_str, "SSLv3") || !strcasecmp(me_str, "SSL3")) {
+	 } else
+#endif
+	 if (!strcasecmp(me_str, "SSLv3") || !strcasecmp(me_str, "SSL3")) {
 	    method = sycSSLv3_server_method();
 	 } else if (!strcasecmp(me_str, "SSLv23") || !strcasecmp(me_str, "SSL23") ||
 		    !strcasecmp(me_str, "SSL")) {
--- socat-1.7.1.3.orig/sslcls.h
+++ socat-1.7.1.3/sslcls.h
@@ -10,8 +10,10 @@
 
 void sycSSL_load_error_strings(void);
 int sycSSL_library_init(void);
+#ifndef OPENSSL_NO_SSL2
 SSL_METHOD *sycSSLv2_client_method(void);
 SSL_METHOD *sycSSLv2_server_method(void);
+#endif
 SSL_METHOD *sycSSLv3_client_method(void);
 SSL_METHOD *sycSSLv3_server_method(void);
 SSL_METHOD *sycSSLv23_client_method(void);
